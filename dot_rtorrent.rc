# Instance layout (base paths)
method.insert = cfg.basedir, private|const|string, (cat,"~/.rtorrent/")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")

method.insert = cfg.download, private|const|string, (cat,"/mnt/torrents/complete/")
method.insert = cfg.download_incomplete, private|const|string, (cat,"/mnt/torrents/incomplete")

method.insert = cfg.watch,   private|const|string, (cat,"/mnt/torrents/watch/")

method.insert = cfg.logs,    private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile, private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")

# Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 57555-57555
network.port_random.set = no

dht.mode.set = on
dht.port.set = 54827
protocol.pex.set = yes
trackers.use_udp.set = yes

# Peer settings
throttle.max_uploads.set = 10000
throttle.max_uploads.global.set = 10000

throttle.min_peers.normal.set = 10000
throttle.max_peers.normal.set = 10000
throttle.min_peers.seed.set = 10000
throttle.max_peers.seed.set = 10000
trackers.numwant.set = 10000

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

# Limits for file handle resources, this is optimized for
# an `ulimit` of 1024 (a common default). You MUST leave
# a ceiling of handles reserved for rTorrent's internal needs!
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

# Memory resource usage (increase if you have a large number of items loaded,
# and/or the available resources to spend)
pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M

# Basic operational settings (no need to change these)
session.path.set = (cat, (cfg.basedir), "session/")
directory.default.set = (cat,"/mnt/torrents/incomplete")
log.execute = (cat, (cfg.logs), "execute.log")
##log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow = bash, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ", (system.pid))

# Other operational settings (check & adapt)
encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25

# view stuff
view.sort_current = seeding, greater=d.ratio=

schedule2 = filter_active,30,30,"view.filter = active,\"or={d.up.rate=,d.down.rate=}\""

# stop torrents when running low on diskspace
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))

# Some additional values and commands
method.insert = system.startup_time, value|const, (system.time)
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

method.insert = d.data_path, simple, "if=(d.is_multi_file), (cat,(d.directory),/), (cat,(d.directory),/,(d.name))"

# Move completed torrents
method.insert = d.get_finished_dir, simple, "cat=/mnt/torrents/complete/,$d.custom1="
method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,-u,$argument.0=,$argument.1=; d.save_full_session="
method.set_key = event.download.finished,move_complete, "d.move_to_complete=$d.data_path=,$d.get_finished_dir="

# Watch directories (add more as you like, but use unique schedule names)
schedule2 = watch_anime,  20, 10, "load.start=/mnt/torrents/watch/anime/*.torrent,d.custom1.set=/mnt/anime/"
schedule2 = watch_doujin, 21, 10, "load.start=/mnt/torrents/watch/doujins/*.torrent,d.custom1.set=/mnt/doujins/"
schedule2 = watch_magnet, 22, 10, "load.start=/mnt/torrents/watch/magnet/*.torrent,d.custom1.set=/mnt/misc/"

method.set_key = event.download.finished,move_complete, "d.move_to_complete=$d.data_path=,$d.custom1="

# Logging:
#   Levels = critical error warn notice info debug
#   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
##log.add_output = "tracker_debug", "log"
